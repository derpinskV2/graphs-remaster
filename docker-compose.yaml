services:
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx
    hostname: nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - django
    volumes:
      - static_volume:/app/static:ro
      - media_volume:/app/media:ro
      - ./nginx/certs/:/etc/nginx/certs:ro
    networks:
      - netwoke

  db:
    image: postgres:17.2-alpine3.21
    container_name: postgres
    hostname: postgres
    restart: unless-stopped
    expose:
      - "5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    env_file:
      - ./api/secrets/.env
    networks:
      - netwoke
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 30s
      timeout: 10s
      retries: 5

  django:
    build:
        context: ./api
        dockerfile: Dockerfile
    container_name: djongo
    hostname: djongo
    restart: unless-stopped
    #poetry run python manage.py startup &&
    command: >
      sh -c "poetry run python manage.py makemigrations &&
             poetry run python manage.py migrate &&
             poetry run python manage.py collectstatic --noinput &&
             poetry run python uvicorn_config.py"
    environment:
      - WATCHFILES_FORCE_POLLING=true
    env_file:
      - ./api/secrets/.env
    expose:
      - "8000"
    volumes:
      - ./api:/app:z
      - static_volume:/app/static
      - media_volume:/app/media
    depends_on:
      - db
    networks:
      - netwoke

volumes:
  static_volume:
  media_volume:
  pgdata:

networks:
  netwoke:
    driver: bridge

# TODO: Uncomment when needed.
#  celery:
#    build:
#        context: ./djongo
#        dockerfile: Dockerfile
#    container_name: un-celery
#    hostname: un-celery
#    restart: unless-stopped
#    command: poetry run celery -A unnamed_webapp worker --loglevel=info -E --max-tasks-per-child=20
#    volumes:
#      - ./djongo:/app:z
#    env_file:
#      - ./secrets/.env
#    networks:
#      - netwoke
#    depends_on:
#      - redis
#      - db
#
#  celery-beat:
#    build:
#        context: ./djongo
#        dockerfile: Dockerfile
#    container_name: belery-ceat
#    hostname: belery-ceat
#    restart: unless-stopped
#    command: poetry run celery -A djongo beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
#    volumes:
#      - ./djongo:/app:z
#    env_file:
#      - ./secrets/.env
#    depends_on:
#      - redis
#      - db
#    networks:
#      - netwoke

#  redis:
#    image: redis:7.4.1
#    container_name: rediss
#    hostname: rediss
#    restart: unless-stopped
#    expose:
#      - "6379"
#    networks:
#      - netwoke
#    healthcheck:
#      test: [ "CMD", "redis-cli", "ping" ]
#      interval: 30s
#      timeout: 10s
#      retries: 3
